一般的 socket 只能读取 transport layer 传输层以上［不含］的数据，raw socket 一般用在设计 network sniffer

http://beej.us/guide/bgnet/
很远的人会试着 connect() 到你的电脑正在 listen() 的 port
连接会排队等待被 accept()
unconnected datagram socket, sendto() 及 recvfrom() 

三元组（ip地址，协议，端口）就可以标识网络的进程
open―write/read―close
AF_INET、AF_INET6、AF_LOCAL（或称AF_UNIX，Unix域socket）、AF_ROUTE
SOCK_STREAM、SOCK_DGRAM、SOCK_RAW、SOCK_PACKET、SOCK_SEQPACKET
IPPROTO_TCP、IPPTOTO_UDP、IPPROTO_SCTP、IPPROTO_TIPC

网络字节序与主机字节序
read()/write()
recv()/send()
readv()/writev()
recvmsg()/sendmsg()
recvfrom()/sendto()

example
	http://blog.csdn.net/stalendp/article/details/12272205

Berkeley.sockets
[[ipc]]

TCP 连接的端点叫做套接字(socket)或插口
端口号拼接到(contatenated with) IP 地址即构成了套接字
TCP 连接::= {socket1, socket2} = {(IP1: port1), (IP2: port2)}
[[tuple]]

socket
	api
	address
特点
	全双工，管道是单工；
	半开放socket，单向，shutDown()
	超时，
	没有数据，tcp连接也一直保持；
	广播，upd实现，
	[[select.poll.epoll]]
	长连接 短连接
	多线程
	[[nonblocking]]

socket type
	datagram, upd
	stream, tcp, sctp 
	raw



套接字
	面向连接的流式套接字
	无连接的数据报套接字

create; socket()
	bind, listen, accept
	connect
	read, write 
	close

Socket主要进行七项基本的操作：

1.连接远程主机 
2.发送数据 
3.接受数据 
4.关闭连接 
5.绑定端口 
6.监听入站数据 
7.在绑定的端口上接受来自远程主机的连接
