

--

专业书。

周围也有朋友爱阅读，对于他们在看的书，即使不看我也会去了解。如果遇到喜欢的书，会和他们一起看，一起讨论。朋友的观点，比豆瓣上的评论更真实，更有趣。


金城洗浴，英文名称特别押韵：Gloden City, Water SPA.反过来也不改变押韵：Water City, Gloden SPA.也可以解释得通，广州潮湿，雨水大，所以是Water City，此地服务好，所以是Gloden SPA。

天桥通常很挤，上班高峰期人满的情况很常见。

不懂的东西要找懂的人帮你解释。

v 冯唐的金圣叹，新技能GET

冯唐总是惦记金圣叹在底下是不是还爽，是不是经常能够吃上腌菜和黄豆。

金圣叹冯唐的影响，冯唐觉得不在于他写的字，他做的事。而是在于小事的 态度。

小事做好， 细节做到，能够省去很多的麻烦。我总是在说， 不要总是解决问题，要去避免问题。总是解决问题会有一种可疑，没有问题创造问题也要有问题，然后我们来解决问题，你看我多牛， 解决了这么多问题。

不喜欢用钱包。总是感觉钱包是小偷发明的，什么人会想着把你最重要的东西放在一起， 证件，银行卡，钱。你觉得方便，什么都在一起，一下子就拿走了， 小偷也这么觉得。

对付灰尘。城市的灰尘，很吓人。屋里常闭门窗， 那些整天开窗的日子就让它远去吧，每天开窗通风一次，天气特别不好的时候还是不要通风了，外面比里面脏，里面只是有点气味。

键盘缝隙很容易进入灰尘，晚上不使用的时候翻过来放着，既简单又干净。

袜子，袜子少了，换洗是问题，袜子多了，样式不同，配对是问题。买一样的袜子就没有问题了。

余不一一。
v金圣叹的水浒，妙哉

配音。我最爱干的事情，圣叹他也喜欢。比如：好货，妙，香，嗄

xx之法，xx之极，我这样写就是浮夸，圣叹这么评是真性情。句与句，篇与篇，一路看下来，赞不绝口，就好像有领笑的电视剧，看第一遍好笑，再看一遍，领笑就会显得很烦人，一种受到干扰的感觉，很不好。

看了水浒，程序员对于变量的管理更有信心。

不管金圣叹的点评如何，看了金圣叹点评水浒的人，都得承认自己的眼光从此发生了变化了，再看其他的文章，感觉文字中间会自己生出评语，妙哉，妙哉，我看到了，我看到了。作者的小心思，我知道了，我知道了。

金圣叹重新定义水浒，百十二回的版本他不承认，百七十回是古本，是最好的版本。

他给自己加戏。后来我还知道，水浒的妙处是圣叹自己修改的，害怕别人知道，又害怕别人不知道，于是自己加上点评，把妙处指出。隐藏的妙处，作者的小心思，全部都瞒不过圣叹，因为那就是圣叹写的，妙哉，妙哉。 我注水浒，水浒助我。

往水浒里面加注释，这就是最早的灌水。
v咪蒙的金圣叹，好赞

咪蒙的出名和我没有关系，即使我阅读，我点赞，我转发，我的作用并不大。

要说清楚咪蒙的成名，还得先说韩寒的《独唱团》，和韩寒有关的东西就有流量（借用互联网术语），他先是说要办一个杂志，于是有了起名风波，后来终于有了名字《独唱团》，各种原因拿不到刊号，于是以书刊号发行，这才有了《独唱团》，可惜只有一期，但一期也足够了。

《好疼的金圣叹》咪蒙的成名作，《独唱团》中的一篇，大众了解咪蒙的入口。

《好疼的金圣叹》文章主要是介绍金圣叹，阅读之后知道金圣叹，也知道了咪蒙。作为金圣叹的布道者，现在再来说金圣叹，不能不提到迷蒙。金圣叹的人生有荒诞的一面，不用夸张的手法， 他做的事情都是古怪的，经过迷蒙演绎以后，更加荒诞，更加搞笑。咪蒙再现金圣叹当时的社会状态，和现在天涯社区，媒体八卦原来是一样一样的。


性格介绍，有入狱、行刑的故事，有点评《水浒》和《西厢记》的后果。《水浒》点评了什么，就一句话带过：无厘头点评手法、大亮透露日常八卦的恶趣味和一些类似成功学的心灵母鸡汤。 

金圣叹对于文学，也有一个自己的标准，也可以叫做金线，他的点评可以叫做金线叹。

廖柴舟《金圣叹先生传》,是咪蒙文章推荐的，应该不错。

wr编程语言论战发言必读

推荐一个github项目，里面有40+种常见的编程语言，都是小案例，都可以运行，从编译器和程序设计原理角度，为各种语言做出ta们自己的介绍。可以作为学习一门新的编程语言入门，可以作为语言特性的查阅资料，可以作为编程语言论战发言的有力证据。

好多。编程语言排行榜上的语言全都有，编译原理，程序设计语言书中提到的语言也有。按照字母排序他们是这些编程语言：ada, algol, bash, c, clojure, cobol, common_lisp, cpp, csharp, emacs_lisp, erlang, fortran, fsharp, go, groovy, haskell, io, java, javascript, jython, lua, matlab, objective-c, ocaml, pascal, perl, php, prolog, python, r, racket, ruby, rust, scala, scheme, simula, smalltalk, sql, swift, tcl。

清晰。编程语言按照目录分开，同一个技术主题都有相同的名字前缀，同一个语言的技术主题因为在同一目录下于是按照数字区分，不同语言的同一技术比较可以grep 技术主题+目录。

简洁。一个例子，一个文件，一个主题。用最简单的语句来说明主题的含义，主题之间不互相混入。

细致。每种语言，不管简单复杂，都是从hello world开始，包含基本语句，选择，循环，函数，常用数据结构的使用：array， string, dict, map。

全面。有不同语言共有特性，也有一些独有特性，特别是一些相同编程特性却起了一个不同的名称，闯荡编程界的江湖必须知道，做出分辨和比较很有必要。比如：lambda, interface, closure，继承，多态，引用计数，高阶函数，求值策略，管道，参量，语法糖，尾部递归，虚拟机语言，永久存储，异常，作用域，命名空间，反射，自省，柯里化，并发，运行加载机制，绑定，回调，代理，信号，消息，线程，并发，异步，类型推到，强类型，弱类型，传名参数，抽象类，断言，特质，引用透明性，仿函数，垃圾回收，类型转换。

好用。全部例子都可以运行，各个语言都有辅助的脚本，不用考虑编译器和参数，都是一种执行方式，运行结果通过终端打印显示，不涉及图形界面。

省事。采用VirtualBox虚拟机+Ubuntu 10.04.4 LTS，不同语言有不同的编译器，apt-get都能够下载到，每种语言需要get的东西在相应的文件夹下的readme有记录。如果你觉得麻烦，可以回复vm得到作者的虚拟机。回复lang获得项目地址。


设计模式不如叫设计考虑，怎么考虑一个东西的设计，让ta在以后面对各种需求更加灵活。最成功的设计应该是计算机，用他什么软件都可以实现，他的秘诀就在于图灵等价
你会遇到一个设计，有两个模块A，B，一个工具可以批量处理A,也可以批量处理B，但是不能批量处理A+B的集合。如果要处理，就需要修改代码，人为增加对A,B区别处理的功能。如果把这一部分开放成为接口，用户遇到这个问题以后，做一些配置，就能解决问题，这是一种广义的用户界面，发布的产品提供了一个易用的，常用的用户界面接口，当用户有需求不能满足的时候，可以自己通过二次开发增加功能。
设计的时候很难考虑全面，需求的改动对于开发者已经是家常便饭，于是他们也想尽办法，让自己的代码能够灵活应对需求的改变。如果不从图灵等价上考虑，做不到图灵等价，设计中肯定有一些组合达不到，怎么修改设计都不行，重新设计还是不考虑图灵等价，另外一些地方又不能够达到，

图灵等价的好处，什么功能都能达到，神一样的编译器和编译器的神，都自带有开发功能，两个编辑器，都能去实现对方好的功能，只是有的容易有的困难，不会出现达不到的


wr 企业微信公众号成功案例

这些经验都是从自己公司的公众号的写作和运营总结出来。比较真实。

公司有没有好的前途，宣传很重要，笔杆子可以比得上枪杆子，战场上一文可以胜过百万雄兵，商业上一文可以胜过千万投入。

快技电子科技公司运营的公众号，在行业内很成功，一个中等规模的公司，通过运营公众号的方式又上了一个台阶。实力比快技电子强的不屑于运营一样内容的公众号，和快技电子同级别的公司做不出这么好的公众号，或者没有认识到公众号的影响力。

下面就我对快技电子的了解，分享一下我对他们公众号运营经验的总结。

时常有更新，通过送礼品获得关注的公众号，最怕的就是更新文章，因为他们既然购买关注，就不会用心思去写文章，说不定文章也是买的，要不就是广告文案，这样的文章一旦推送给订阅者，取消关注的可能性非常大。快技的文章是每天中午11:30更新，可能考虑得到推送的时间，打一个提前量。

作为一个行业技术文章为主的订阅号，中午推送有它的道理。中午是午餐时间，也是同事交流的时间，你要是有新的产品，新的技术公布，他们不但可以利用中午的闲暇阅读，还有时间来讨论。即使不阅读，闲暇时间玩手机的概率都比平时大，新的推送会产生一个提醒，再没时间看看标题也是可以的。

公众号的内容定位，先要有拿得出手的文章，这样才能留得住人，宣传公司产品方法有多种，只有活动和广告在我们这个行业是行不通的。

公司的公众号内容有一部分是技术，写作任务下达到每一个人研发和技术人员，每个人都有写稿的要求。根据每个月做一个评比，根据阅读量的多少，排出一二三名，给予一定的物质奖励，虽然东西不值钱，看着几千的阅读量，荣誉还是有的。

如何做到一直被模仿，从未被超越，如果采用一个战斗力强的人来写作，发文章，那么这个离开公司好文章就没法继续。一个人的能力总是有限的，集体的力量却是无穷的，公众号文章就是要开全体员工的积极性，搞比赛，评模范。

虽然每个人都需要写公众号，内容不一定需要和工作一一对应，但是也不能写和公司目标完全无关的文章，这个需要控制，文章交由专门的部门和人发布。

公司有专门的部门运营公众号，有钱就是好，直接社招，把就经验的人请来，不必自己从0到1。这些同事负责每天文章的最终发布，公众号后台的维护，公司公众号写作的培训。最重要的是接受投稿，改进文章，拟定更好的标题，打回不合适的文章，重写优化已经有一定阅读量的文章，精益求精，让这些文章更好，再次发布，以博得更多的阅读量。

公司有1000人，但并不是所有的人都帮着公司刷阅读量，文章不好阅读不到300很常见。

内容经得起考验，技术文章由文员收集，去除错别字，理顺语句。然后交给技术主管，审阅技术的内容，一看是否正确，二看是否泄密。这样的文章最后才进入公众号部门。

文章目标可以是学生，我们未来的同事或客户，可以是我们的客户，一个专题，客户需要资料的时候可以推荐公众号的文章。

定期开会交流，根据后台数据做出调整。整理出一套适合公司的方法论。

后台回复管理，因为后台的回复说服客户购买产品的案例已经有了。

增加关注，也会定期做一些活动，但是公众号二维码的曝光很关键，产品的广告业，公司的前台，很多细节的地方加上一个二维码，让看到的人扫码加入不难，靠的全是心细。

----
wr 图灵等价和产品设计

有种不好的设计叫考虑不周，好像再好的设计也不能穷举，考虑不周是必然。如果一个设计能够穷举，就像计算机编程语言一样，不管外表的关键词、语法怎么不同，只要能够满足图灵等价，就可以实现彼此都有的功能。

图灵等价的原理也可以应用在产品的设计中。把它当作一种设计模式，怎么考虑一个东西的设计，让ta在以后面对各种需求更加灵活。

我会遇到过一个设计，有两个模块A，B，一个工具可以批量处理A，也可以批量处理B，但是不能批量处理A+B的集合。如果要处理，就需要修改代码，人为增加对A,B区别处理的功能。如果把这一部分开放成为接口，用户遇到这个问题以后，做一些配置，就能解决问题，不必麻烦开发人员。

需求的改动对于开发者已经是家常便饭，骂娘也没有用，于是他们也想尽办法，让自己的代码能够灵活应对需求的改变。这个时候需要从图灵等价上考虑问题，如果不从图灵等价上考虑，做不到图灵等价，设计中肯定有一些组合达不到，怎么修改设计都不行，即使重新设计还是不考虑图灵等价，之前需要满足的地方达到了，可是另外一些地方又不能够达到。如此反复，直到碰到一种可以满足图灵等价的组合。

图灵等价用在设计中，让功能和功能的组合像计算机程序一样，可以再次组合，在一个业务领域内，什么功能都能达到。

神一样的编译器和编译器的神,说的是vim和emacs，他们都自带有开发功能，两个编辑器的设计各不相同，但是都能实现对有的功能，只是有的容易有的困难，不会出现做不到的情况。

图灵等价的设计有很多形式，能在图形界面解决，有开放配置文件的，有开放编程接口，有提供配置文件，有插件，有脚本。一些产品就是基于这些二次开发的系统完成。他们的强大我们都见识过，Microsoft Office的VBA， foobar的配置，AutoCAD的lisp，Webkit中的js引擎，各种嵌入lua的系统。


