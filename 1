
Function linenumberbt30() As Boolean

   Dim r, p, r0, p0, rr, pp

    p = Selection.Information(wdActiveEndPageNumber) '当前页码
    r = Selection.Information(wdFirstCharacterLineNumber) '当前行
     
    '数行数
   p0 = p
   rr = r
   Do
       Selection.MoveDown unit:=wdLine, Count:=1

       pp = Selection.Information(wdActiveEndPageNumber)
       r0 = Selection.Information(wdFirstCharacterLineNumber)
       If pp > p Then
           '退回原处
           Selection.MoveUp unit:=wdLine, Count:=(rr - r + 1)
           Exit Do
       End If
       If rr = r0 Then
           '退回原处
          Selection.MoveUp unit:=wdLine, Count:=(rr - r)
           Exit Do
       End If
        If r0 > 30 Then
            Exit Do
        End If
       rr = r0
    Loop
    If r0 > 30 Then
        linenumberbt30 = True
    Else
        linenumberbt30 = Flase
    End If
    ' Debug.Print "当前页码：" & p & vbCrLf & "本页总行数：" & ln

End Function

Sub 字体设置()
 
    Selection.WholeStory
    Selection.Font.Size = 10
    Selection.Font.Name = "华文楷体"
End Sub
Sub 换行替换()
'
' 宏2 宏
'
'
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "^p^p"
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll
    Selection.Find.Execute Replace:=wdReplaceAll
End Sub
Sub 替换文本1()
'
' 宏2 宏
'
'
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "$$$$"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll

    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "^p　　"
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll
    
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "^p  "
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll
    
    
    Selection.WholeStory
    With Selection.ParagraphFormat
        .SpaceBeforeAuto = False
        .SpaceAfterAuto = False
        .FirstLineIndent = CentimetersToPoints(0.75)
    End With
End Sub

Sub 调整格式保存PDF()
'
' 调整格式保存PDF 宏
'
'
    WordBasic.PageSetupPaper Tab:=1, PaperSize:=9, TopMargin:="0.2", _
        BottomMargin:="0.75", LeftMargin:="0.2", RightMargin:="0.2", Gutter:="0", _
         PageWidth:="6", PageHeight:="55", Orientation:=0, FirstPage:=0, _
        OtherPages:=0, VertAlign:=0, ApplyPropsTo:=4, FacingPages:=0, _
        HeaderDistance:="0", FooterDistance:="0", SectionStart:=2, _
        OddAndEvenPages:=0, DifferentFirstPage:=0, Endnotes:=0, LineNum:=0, _
        CountBy:=0, TwoOnOne:=0, GutterPosition:=0, LayoutMode:=2, DocFontName:= _
        "", FirstPageOnLeft:=0, SectionType:=1, FolioPrint:=0, ReverseFolio:=0, _
        FolioPages:=1
    ActiveDocument.Save
    ActiveDocument.ExportAsFixedFormat OutputFileName:= _
        "D:\reading\_to_iphone\1\" & ActiveDocument.Name & ".pdf", ExportFormat:=wdExportFormatPDF, _
        OpenAfterExport:=False, OptimizeFor:=wdExportOptimizeForOnScreen, Range:= _
        wdExportAllDocument, From:=1, To:=1, Item:=wdExportDocumentContent, _
        IncludeDocProps:=True, KeepIRM:=True, CreateBookmarks:= _
        wdExportCreateNoBookmarks, DocStructureTags:=True, BitmapMissingFonts:= _
        True, UseISO19005_1:=False
    Application.WindowState = wdWindowStateNormal
End Sub


Sub 批量运行宏()

    Dim mydialog As FileDialog, i As Integer, sFile As String
    
    ' On Error Resume Next '忽略错误
    
    '定义一个文件选取对话框
    Set mydialog = Application.FileDialog(msoFileDialogFilePicker)
    With mydialog
        .Filters.Clear '清除所有文件筛选器中的项目
        .Filters.Add "所有 WORD 文件", "*.doc?", 1 '增加筛选器的项目为所有WORD文件
        .AllowMultiSelect = True '允许多项选择
        .Show
        If .SelectedItems.Count = 0 Then
            MsgBox "没有选择任何文件！", vbExclamation + vbOKOnly, "提示"
            Exit Sub
        End If
        
        For i = 1 To .SelectedItems.Count
            sFile = .SelectedItems(i)
            Documents.Open FileName:=sFile
            Call 字体设置
            Call 换行替换
            Call 调整格式保存PDF
            ActiveDocument.Close True
        Next

        MsgBox "文件处理完毕！" & vbCrLf & vbCrLf & "共处理了 " & .SelectedItems.Count & " 个文件。", vbInformation + vbOKOnly, "提示"
    End With

End Sub

Sub text2word_unicode(ByVal sFile As String)
            sFileNew = Left(sFile, Len(sFile) - 4)
            If Dir(sFileNew & ".docx", vbNormal) = "" Then

 
                Documents.Open FileName:=sFile, ConfirmConversions:= _
                    True, ReadOnly:=False, AddToRecentFiles:=False, PasswordDocument:="", _
                    PasswordTemplate:="", Revert:=False, WritePasswordDocument:="", _
                    WritePasswordTemplate:="", Format:=wdOpenUnicodeText, XMLTransform:="", _
                    Encoding:=936

                ActiveDocument.SaveAs FileName:=sFileNew & ".docx", FileFormat:= _
                    wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
                    :=False, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
                    :=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
                    SaveAsAOCELetter:=False
                Call 字体设置
                Call 替换文本1
                Call 换行替换
                WordBasic.PageSetupPaper Tab:=1, PaperSize:=9, TopMargin:="0.2", _
                    BottomMargin:="0.75", LeftMargin:="0.2", RightMargin:="0.2", Gutter:="0", _
                     PageWidth:="6", PageHeight:="55", Orientation:=0, FirstPage:=0, _
                    OtherPages:=0, VertAlign:=0, ApplyPropsTo:=4, FacingPages:=0, _
                    HeaderDistance:="0", FooterDistance:="0", SectionStart:=2, _
                    OddAndEvenPages:=0, DifferentFirstPage:=0, Endnotes:=0, LineNum:=0, _
                    CountBy:=0, TwoOnOne:=0, GutterPosition:=0, LayoutMode:=2, DocFontName:= _
                    "", FirstPageOnLeft:=0, SectionType:=1, FolioPrint:=0, ReverseFolio:=0, _
                    FolioPages:=1
                ActiveDocument.Save
                ActiveDocument.Close True

            End If
End Sub

Sub text2word(ByVal sFile As String)
            sFileNew = Left(sFile, Len(sFile) - 4)
            If Dir(sFileNew & ".docx", vbNormal) = "" Then

 
                Documents.Open FileName:=sFile, ConfirmConversions:= _
                    True, ReadOnly:=False, AddToRecentFiles:=False, PasswordDocument:="", _
                    PasswordTemplate:="", Revert:=False, WritePasswordDocument:="", _
                    WritePasswordTemplate:="", Format:=wdOpenFormatEncodedText, XMLTransform:="", _
                    Encoding:=936

                ActiveDocument.SaveAs FileName:=sFileNew & ".docx", FileFormat:= _
                    wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
                    :=False, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
                    :=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
                    SaveAsAOCELetter:=False
                Call 字体设置
                Call 替换文本1
                Call 换行替换
                WordBasic.PageSetupPaper Tab:=1, PaperSize:=9, TopMargin:="0.2", _
                    BottomMargin:="0.75", LeftMargin:="0.2", RightMargin:="0.2", Gutter:="0", _
                     PageWidth:="6", PageHeight:="55", Orientation:=0, FirstPage:=0, _
                    OtherPages:=0, VertAlign:=0, ApplyPropsTo:=4, FacingPages:=0, _
                    HeaderDistance:="0", FooterDistance:="0", SectionStart:=2, _
                    OddAndEvenPages:=0, DifferentFirstPage:=0, Endnotes:=0, LineNum:=0, _
                    CountBy:=0, TwoOnOne:=0, GutterPosition:=0, LayoutMode:=2, DocFontName:= _
                    "", FirstPageOnLeft:=0, SectionType:=1, FolioPrint:=0, ReverseFolio:=0, _
                    FolioPages:=1
                ActiveDocument.Save
                ActiveDocument.Close True

            End If
End Sub
Sub docx2pdf(ByVal sFile As String)
    Dim fi As DocumentProperties
    sFileNew = Left(sFile, Len(sFile) - 5)
    If Dir(sFileNew & ".pdf", vbNormal) = "" Then

        Documents.Open FileName:=sFile, ConfirmConversions:=True, _
            ReadOnly:=False, AddToRecentFiles:=False, PasswordDocument:="", _
            PasswordTemplate:="", Revert:=False, WritePasswordDocument:="", _
            WritePasswordTemplate:="", Format:=wdOpenFormatAuto, XMLTransform:=""
         
         
        ' If linenumberbt30() = True Then
        If ActiveDocument.ActiveWindow.Panes(1).Pages.Count < 6000 Then
            
            ActiveDocument.ExportAsFixedFormat OutputFileName:= _
                sFileNew & ".pdf", ExportFormat:=wdExportFormatPDF, _
                OpenAfterExport:=False, OptimizeFor:=wdExportOptimizeForOnScreen, Range:= _
                wdExportAllDocument, From:=1, To:=1, Item:=wdExportDocumentContent, _
                IncludeDocProps:=True, KeepIRM:=True, CreateBookmarks:= _
                wdExportCreateNoBookmarks, DocStructureTags:=True, BitmapMissingFonts:= _
                True, UseISO19005_1:=False
            ActiveDocument.Close True
        Else
            Debug.Print sFile
            Application.DisplayAlerts = wdAlertsNone
            ActiveDocument.Close True
            Kill sFileNew & ".docx"
            
        End If
        

    End If
End Sub
Sub check_docx(ByVal sFile As String)
     
    sFileNew = Left(sFile, Len(sFile) - 5)
 
        Documents.Open FileName:=sFile, ConfirmConversions:=True, _
            ReadOnly:=True, AddToRecentFiles:=False, PasswordDocument:="", _
            PasswordTemplate:="", Revert:=False, WritePasswordDocument:="", _
            WritePasswordTemplate:="", Format:=wdOpenFormatAuto, XMLTransform:=""
 
        ActiveDocument.Close True

End Sub

Sub run_gen_text2docx1()
    Dim i As Long
    i = 1
               
    Call GetFolderFile("D:\reading\_to_iphone\_gen2\file_2mb", i)
End Sub
Sub run_gen_text2docx2()
    Dim i As Long
    i = 1
               
    ' Call GetFolderFile("D:\reading\_to_iphone\_gen2\分类", i)
    Call GetFolderFile("D:\reading\_to_iphone\_gen2\book.txt3", i)
End Sub
Sub run_gen_text2docx3()
    Dim i As Long
    i = 1
               
    ' Call GetFolderFile("D:\reading\_to_iphone\_gen2\分类", i)
    Call GetFolderFile("D:\reading\_to_iphone\_gen2\books.txt", i)
End Sub
Private Sub GetFolderFile(ByVal nPath As String, ByRef iCount As Long)
Dim iFileSys
Dim sFo As String

'Dim iFile As Files, gFile As File
'Dim iFolder As Folder, sFolder As Folders, nFolder As Folder
     Set iFileSys = CreateObject("Scripting.FileSystemObject")
    Set iFolder = iFileSys.GetFolder(nPath)
    Set sFolder = iFolder.SubFolders
    Set iFile = iFolder.Files
    
    On Error Resume Next
    With ActiveSheet
        For Each gFile In iFile
           ' .Hyperlinks.Add anchor:=.Cells(iCount, 1), Address:=gFile.path, TextToDisplay:=gFile.Name
            iCount = iCount + 1
            sFileNew = Mid(gFile, Len(gFile) - 3)
            
            If sFileNew = ".txt" Then
                ' Debug.Print iCount, gFile, sFileNew
                ' text2word (gFile)
            End If
            If sFileNew = "docx" Then
                ' Debug.Print iCount, gFile, sFileNew
                docx2pdf (gFile)
                ' check_docx (gFile)
            End If

        Next
    End With
    
    '递归遍历所有子文件夹
    For Each nFolder In sFolder
        Call GetFolderFile(nFolder.Path, iCount)
    Next
End Sub


Sub 宏4()
    With Selection
        temp = .Information(wdFirstCharacterLineNumber)
    End With
    Debug.Print temp
End Sub

