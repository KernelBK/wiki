问词

{
	booklist
		bookinfo, bookWordsFreqList, state{hasWordsList, studyPorcess}
	movie
		info, wordsFreqList, state
}

 /usr/share/dict/words
单词放在array中，可以用removeObjectInArray去掉熟词。

对用户的词表，全部的单词进行统计，标记的次数，出现的次数。


多国语言

json存放单词格式

{
	"easy_words" : [
		"aaa",
		"bbb"
	]
}


同一个单词下面聊天

单词云

人名，地名

资源， amazon.com提供spi进行图书查找

加星

本地电子书可以用其他的应用打开


单词格式
	本地有全部单词
	用户单词
	登陆的时候下载和上传

数据结构的设计
	用户
		认识的单词 list
		电子书 list
	电子书 list

本地不做词频提取处理
	由用户在web端提交，自动处理
		在app里面刷新或搜索得到
	

app真机调试

可以搜索已经服务器上的词频书
	没有的书可以添加心愿
	或者自己放txt格式的电子书到本地
		上传用户的txt处理后的类容？

确定开发步骤
	界面
		ref: oschina, vz
		采用标准界面能否美观。
	[[服务端]]
		[[../AVOS_Cloud]]
			ref: avos demo,
	UI逻辑
	业务逻辑
		下拉刷新
		读取文件
		网络查词，图片，分享
		设置
		用户登录管理
		数据存放
		下载

	学习产考程序

现有的背单词软件都是依据考试来分类

freq word, fw, fuck word.

读取文件，再见面中显示文件列表
	点击文件列表后进入，显示单词出现的频率
		如果是第一次进入需要生成单词的频率列表
		如果不是第一次进入，打开以前生过的单词频率列表
			单词频率列表显示一篇文章单词出现的次数，按照从高到低的程序排列
				点击单词进入学习页面
				一个文章的单词信息也可用卡片的形式展现，上面除了出现的次数还可以有更多的信息。
					学习


